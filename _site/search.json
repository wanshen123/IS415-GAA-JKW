[
  {
    "objectID": "Work/testdata/MPSZ-2019.html",
    "href": "Work/testdata/MPSZ-2019.html",
    "title": "IS415-GAA-JinYuan&WanShen",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Work/KDE_Analysis.html",
    "href": "Work/KDE_Analysis.html",
    "title": "KDE Analysis",
    "section": "",
    "text": "pacman::p_load(sf, tidyverse, tmap, maptools, raster, spatstat, spNetwork, classInt, viridis, arrow)\n\n\nbinlocation &lt;- read_rds(\"../Data/alba/ewbins.rds\")\nmpsz &lt;- st_read(dsn = \"testdata\", layer = \"MPSZ-2019\")\n\nReading layer `MPSZ-2019' from data source \n  `C:\\dljyuan\\IS415-GAA-JKW\\Work\\testdata' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\nmpsz &lt;- st_transform(mpsz, crs = 3414)\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(binlocation) +\n  tm_dots()\n\n\n\n\n\n\n\n\n\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(binlocation) +\n  tm_dots()\n\nWarning: The shape mpsz is invalid. See sf::st_is_valid\n\n\n\n\n\n\n\n\n\n\nbin_sf &lt;- as_Spatial(binlocation)\nbin_sp &lt;- as(bin_sf, \"SpatialPoints\")\nbin_ppp &lt;- as(bin_sp, \"ppp\")\nplot(bin_ppp)\n\n\n\n\n\n\n\n\n\nisland &lt;- as_Spatial(mpsz)\nisland_sp &lt;- as(island, \"SpatialPolygons\")\nsg_owin &lt;- as(island_sp, \"owin\")\nplot(sg_owin)\n\n\n\n\n\n\n\n\n\nislandSG_ppp_bin = bin_ppp[sg_owin]\n\n\nkde_bin_bw &lt;- density(bin_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \n\n\nplot(kde_bin_bw)\n\n\n\n\n\n\n\n\n\nbw1 &lt;- bw.diggle(bin_ppp)\nbw1\n\n   sigma \n110.9464 \n\n\n\nbin_ppp.km &lt;- rescale(bin_ppp, 1000, \"km\")\n\n\nkde_bin.bw &lt;- density(bin_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\nplot(kde_bin.bw)\n\n\n\n\n\n\n\n\n\ngridded_kde_bin_bw &lt;- as.SpatialGridDataFrame.im(kde_bin.bw)\nspplot(gridded_kde_bin_bw)\n\n\n\n\n\n\n\n\n\nkde_kde_bin_bw_raster &lt;- raster(gridded_kde_bin_bw)\n\n\nprojection(kde_kde_bin_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")\nkde_kde_bin_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.2289362, 0.1610613  (x, y)\nextent     : 13.19037, 42.4942, 27.43027, 48.04612  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : -9.785608e-15, 76.09259  (min, max)\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(kde_kde_bin_bw_raster) +\n  tm_raster(style = \"cont\", palette = \"plasma\") +\n  tm_layout(legend.show = TRUE, legend.text.color = \"white\")\n\n\n\n\n\n\n\n\n\npung &lt;- mpsz %&gt;%\n  filter(PLN_AREA_N == \"PUNGGOL\")\npung &lt;- pung%&gt;%\n  st_union()\npung &lt;- st_make_valid(pung)\n\ntamp &lt;- mpsz %&gt;%\n  filter(PLN_AREA_N == \"TAMPINES\")\ntamp &lt;- tamp%&gt;%\n  st_union()\ntamp &lt;- st_make_valid(tamp)\n\ncck &lt;- mpsz %&gt;%\n  filter(PLN_AREA_N == \"CHOA CHU KANG\")\ncck &lt;- cck%&gt;%\n  st_union()\ncck &lt;- st_make_valid(cck)\n\njw &lt;- mpsz %&gt;%\n  filter(PLN_AREA_N == \"JURONG WEST\")\njw &lt;- jw%&gt;%\n  st_union()\njw &lt;- st_make_valid(jw)\n\npung &lt;- st_transform(pung, crs = 3414)\ntamp &lt;- st_transform(tamp, crs = 3414)\ncck &lt;- st_transform(cck, crs = 3414)\njw &lt;- st_transform(jw, crs = 3414)\n\n\nroads_in_singapore &lt;- read_rds(\"testdata/sgRoad.rds\")\npung_roads &lt;- st_intersection(roads_in_singapore, pung)\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\ntamp_roads &lt;- st_intersection(roads_in_singapore, tamp)\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\ncck_roads &lt;- st_intersection(roads_in_singapore, cck)\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\njw_roads &lt;- st_intersection(roads_in_singapore, jw)\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\n\n\npar(mfrow=c(2,2))\nplot(pung, main = \"Punggol\")\nplot(tamp, main = \"Tampines\")\nplot(cck, main = \"Choa Chu Kang\")\nplot(jw, main = \"Jurong West\")\n\n\n\n\n\n\n\n\n\ntmap_mode('plot')\n\ntmap mode set to plotting\n\ntmap_arrange(tm_shape(pung_roads) +\n               tm_lines(col = \"red\") +\n               tm_layout(title = \"Punggol\", title.size = 0.8),\n             tm_shape(tamp_roads) +\n               tm_lines(col = \"blue\") +\n               tm_layout(title = \"Tampines\", title.size = 0.8), \n             tm_shape(cck_roads) +\n               tm_lines(col = \"green\") +\n               tm_layout(title = \"Choa Chu Kang\", title.size = 0.8),\n             tm_shape(jw_roads) +\n               tm_lines(col = \"orange\") +\n               tm_layout(title = \"Jurong West\", title.size = 0.8),\n             asp=2, ncol=2)\n\n\n\n\n\n\n\n\n\n# Identify POINTs\npung_points &lt;- pung_roads[st_geometry_type(pung_roads) != \"POINT\", ]\ntamp_points &lt;- tamp_roads[st_geometry_type(tamp_roads) != \"POINT\", ]\ncck_points &lt;- cck_roads[st_geometry_type(cck_roads) != \"POINT\", ]\njw_points &lt;- jw_roads[st_geometry_type(jw_roads) != \"POINT\", ]\n\n\npung_roads &lt;- st_cast(pung_points, \"LINESTRING\")\n\nWarning in st_cast.MULTILINESTRING(X[[i]], ...): keeping first linestring only\n\nWarning in st_cast.MULTILINESTRING(X[[i]], ...): keeping first linestring only\n\nWarning in st_cast.MULTILINESTRING(X[[i]], ...): keeping first linestring only\n\nWarning in st_cast.MULTILINESTRING(X[[i]], ...): keeping first linestring only\n\ntamp_roads &lt;- st_cast(tamp_points, \"LINESTRING\")\n\nWarning in st_cast.MULTILINESTRING(X[[i]], ...): keeping first linestring only\n\nWarning in st_cast.MULTILINESTRING(X[[i]], ...): keeping first linestring only\n\nWarning in st_cast.MULTILINESTRING(X[[i]], ...): keeping first linestring only\n\nWarning in st_cast.MULTILINESTRING(X[[i]], ...): keeping first linestring only\n\ncck_roads &lt;- st_cast(cck_points, \"LINESTRING\")\n\nWarning in st_cast.MULTILINESTRING(X[[i]], ...): keeping first linestring only\n\nWarning in st_cast.MULTILINESTRING(X[[i]], ...): keeping first linestring only\n\nWarning in st_cast.MULTILINESTRING(X[[i]], ...): keeping first linestring only\n\nWarning in st_cast.MULTILINESTRING(X[[i]], ...): keeping first linestring only\n\nWarning in st_cast.MULTILINESTRING(X[[i]], ...): keeping first linestring only\n\nWarning in st_cast.MULTILINESTRING(X[[i]], ...): keeping first linestring only\n\nWarning in st_cast.MULTILINESTRING(X[[i]], ...): keeping first linestring only\n\njw_roads &lt;- st_cast(jw_points, \"LINESTRING\")\n\nWarning in st_cast.GEOMETRYCOLLECTION(X[[i]], ...): only first part of\ngeometrycollection is retained\n\nWarning in st_cast.GEOMETRYCOLLECTION(X[[i]], ...): keeping first linestring\nonly\n\nWarning in st_cast.GEOMETRYCOLLECTION(X[[i]], ...): keeping first linestring\nonly\n\nWarning in st_cast.GEOMETRYCOLLECTION(X[[i]], ...): keeping first linestring\nonly\n\nWarning in st_cast.GEOMETRYCOLLECTION(X[[i]], ...): keeping first linestring\nonly\n\n\n\nlixels_pung &lt;- lixelize_lines(pung_roads, \n                         700, \n                         mindist = 350)\nlixels_tamp &lt;- lixelize_lines(tamp_roads, \n                         700, \n                         mindist = 350)\nlixels_cck &lt;- lixelize_lines(cck_roads, \n                         700, \n                         mindist = 350)\nlixels_jw &lt;- lixelize_lines(jw_roads, \n                         700, \n                         mindist = 350)\n\n\nsamples_pung &lt;- lines_center(lixels_pung)\nsamples_tamp &lt;- lines_center(lixels_tamp)\nsamples_cck &lt;- lines_center(lixels_cck)\nsamples_jw &lt;- lines_center(lixels_jw)\n\n\norigin_pung = st_intersection(binlocation, pung)\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\norigin_tamp = st_intersection(binlocation, tamp)\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\norigin_cck = st_intersection(binlocation, cck)\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\norigin_jw = st_intersection(binlocation, jw)\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\n\n\ntmap_mode('plot')\n\ntmap mode set to plotting\n\ntm_basemap(\"OpenStreetMap\") +\ntm_shape(pung_roads) +\n  tm_lines(col = \"red\") +\n  tm_shape(origin_pung) + \n  tm_dots()\n\n\n\n\n\n\n\ntmap_mode('plot')\n\ntmap mode set to plotting\n\n\n\ntmap_mode('plot')\n\ntmap mode set to plotting\n\ntm_basemap(\"OpenStreetMap\") +\ntm_shape(tamp_roads) +\n  tm_lines(col = \"blue\") +\n  tm_shape(origin_tamp) + \n  tm_dots()\n\n\n\n\n\n\n\ntmap_mode('plot')\n\ntmap mode set to plotting\n\n\n\ntmap_mode('view')\n\ntmap mode set to interactive viewing\n\ntm_basemap(\"OpenStreetMap\") +\ntm_shape(cck_roads) +\n  tm_lines(col = \"green\") +\n  tm_shape(origin_cck) + \n  tm_dots()\n\nWarning: The shape cck_roads is invalid (after reprojection). See\nsf::st_is_valid\n\n\nWarning: The shape cck_roads contains empty units (after reprojection).\n\n\n\n\n\ntmap_mode('plot')\n\ntmap mode set to plotting\n\n\n\ntmap_mode('plot')\n\ntmap mode set to plotting\n\ntm_basemap(\"OpenStreetMap\") +\ntm_shape(jw_roads) +\n  tm_lines(col = \"orange\") +\n  tm_shape(origin_jw) + \n  tm_dots()\n\n\n\n\n\n\n\ntmap_mode('plot')\n\ntmap mode set to plotting"
  },
  {
    "objectID": "Proposal/Proposal.html",
    "href": "Proposal/Proposal.html",
    "title": "IS415-GAA Group 6: Project Proposal - Geospatial Analysis of Recycling Bin Distribution in Singapore",
    "section": "",
    "text": "As urbanization accelerates globally, effective waste management becomes paramount to maintain environmental sustainability and public health. Singapore, a densely populated city-state, faces significant waste management challenges. While initiatives like recycling have been implemented, optimizing the distribution of recycling bins remains crucial for maximizing participation and minimizing waste diversion. Geospatial analytics offer a powerful tool set to analyze spatial data, optimize resource allocation, and enhance waste management strategies.\nUnder Singapore’s Zero Waste Masterplan and the Singapore Green Plan, Singapore aims to increase its overall recycling rate to 70 per cent by 2030. Achieving this ambitious goal necessitates a comprehensive assessment of the existing recycling infrastructure and targeted interventions to address any gaps in distribution.\n\n\n\n\nOur project aims to develop a comprehensive application that leverages geospatial analytics to optimize the distribution of recycling bins across Singapore. By analyzing data on population density and existing bin locations, the application will identify spatial patterns, gaps in coverage, and opportunities for improvement in the placement of normal blue recycling bins, incentive bins, and e-waste bins. The application will then provide insights based on the analysis and allow users to interactively explore the data and results.\n\n\n\n\nTypes of Recycle Bins: This website is a wiki that provides information on the different types of recycling bins and recycling initiatives in Singapore.\nSustainability Initiatives in Singapore\n\nSingapore’s Zero Waste Master Plan: This website is about Singapore’s plan to achieve a sustainable, resource-efficient, and climate-resilient future through its Zero Waste Masterplan by 2030.\nSingapore Green Plan 2030: This website highlights Singapore’s national sustainability plan, which aims to strengthen the country’s commitments under the UN’s 2030 Sustainable Development Agenda and Paris Agreement. It also aims to position Singapore to achieve its long-term aspiration of attaining net-zero emissions by 2050.\n\nPaper Recycle Bins Interactive Map: This map offers information on the locations of SG Recycle bins designated for paper recycling.\n\nOur project will draw from existing geospatial analysis techniques and open datasets to inform our approach. We will focus on practical exercises to refine our proposal and ensure realistic analytical methods.\n\n\nBased on the myriad recycling maps and scattered information available online, there lacks a centralized hub presenting comprehensive recycling details, including various categories like regular recyclables, e-waste, paper, clothes, and more. In response to Singapore’s recycling initiative urging us to leverage geospatial analysis, we aim to streamline this data aggregation process, extracting valuable insights to formulate effective strategies towards achieving Singapore’s zero emissions goals.\n\n\n\n\nThe project will utilize the following data sets:\n\ndata.gov.sg: Location of Blue Bins in Singapore\nnea.gov.sg: Location of Reverse Vending Machines(RVM) [RecycleNSave] in Singapore\nALBA E-Waste Singapore: Location of E-Waste Bin in Singapore\nSingstat: Population Density of Singapore\n\n\n\n\n\n\nThe Spatial Analysis Module will employ Kernel Density Estimation (KDE) to analyze the spatial distribution of recycling bins and population density across Singapore. KDE is a commonly used technique in spatial analysis to estimate the density of point events over a continuous surface. By applying KDE to the location data of recycling bins and population density, we will generate density surfaces that visualize the intensity of these features across the city-state.\nThis module will involve the following steps:\n\nData Preparation: Cleaning and preprocessing of the location data of recycling bins and population density to ensure consistency and accuracy.\nKDE Analysis: Applying KDE algorithms to the prepared data sets to generate density surfaces for recycling bins and population density.\nVisualization: Visualizing the KDE surfaces using interactive maps to allow users to explore the spatial distribution patterns.\n\n\n\n\nThe Hotspot Identification Module will utilize global and local measures of spatial autocorrelation to identify hotspots and cold spots of recycling bins and population density. Global measures, such as Moran’s I or Geary’s C, will provide an overall assessment of spatial clustering, while local measures, such as Local Indicators of Spatial Association (LISA), will identify specific hotspots and cold spots within the city-state.\nThis module will involve the following steps:\n\nCalculation of Global Measures: Computing global measures of spatial autocorrelation to assess the overall clustering patterns of recycling bins and population density.\nLocal Indicators Analysis: Conducting LISA analysis to identify statistically significant clusters of high and low values (hotspots and cold spots) of recycling bins and population density.\nInterpretation: Interpreting the results of the hotspot analysis in conjunction with demographic and environmental data to understand the underlying factors influencing the spatial distribution patterns.\n\n\n\n\n\nThe shiny application will integrate the outputs from the Spatial Analysis Module and Hotspot Identification Module to provide users with interactive visualizations and actionable insights. Users will be able to explore the KDE surfaces, identify hotspots and cold spots, and access recommendations for optimizing recycling bin distribution in Singapore. The application will feature intuitive user interfaces and interactive maps to facilitate data exploration and decision-making by stakeholders and policymakers."
  },
  {
    "objectID": "Proposal/Proposal.html#problem-motivation",
    "href": "Proposal/Proposal.html#problem-motivation",
    "title": "IS415-GAA Group 6: Project Proposal - Geospatial Analysis of Recycling Bin Distribution in Singapore",
    "section": "",
    "text": "As urbanization accelerates globally, effective waste management becomes paramount to maintain environmental sustainability and public health. Singapore, a densely populated city-state, faces significant waste management challenges. While initiatives like recycling have been implemented, optimizing the distribution of recycling bins remains crucial for maximizing participation and minimizing waste diversion. Geospatial analytics offer a powerful tool set to analyze spatial data, optimize resource allocation, and enhance waste management strategies.\nUnder Singapore’s Zero Waste Masterplan and the Singapore Green Plan, Singapore aims to increase its overall recycling rate to 70 per cent by 2030. Achieving this ambitious goal necessitates a comprehensive assessment of the existing recycling infrastructure and targeted interventions to address any gaps in distribution."
  },
  {
    "objectID": "Proposal/Proposal.html#objective",
    "href": "Proposal/Proposal.html#objective",
    "title": "IS415-GAA Group 6: Project Proposal - Geospatial Analysis of Recycling Bin Distribution in Singapore",
    "section": "",
    "text": "Our project aims to develop a comprehensive application that leverages geospatial analytics to optimize the distribution of recycling bins across Singapore. By analyzing data on population density and existing bin locations, the application will identify spatial patterns, gaps in coverage, and opportunities for improvement in the placement of normal blue recycling bins, incentive bins, and e-waste bins. The application will then provide insights based on the analysis and allow users to interactively explore the data and results."
  },
  {
    "objectID": "Proposal/Proposal.html#relevant-related-works",
    "href": "Proposal/Proposal.html#relevant-related-works",
    "title": "IS415-GAA Group 6: Project Proposal - Geospatial Analysis of Recycling Bin Distribution in Singapore",
    "section": "",
    "text": "Types of Recycle Bins: This website is a wiki that provides information on the different types of recycling bins and recycling initiatives in Singapore.\nSustainability Initiatives in Singapore\n\nSingapore’s Zero Waste Master Plan: This website is about Singapore’s plan to achieve a sustainable, resource-efficient, and climate-resilient future through its Zero Waste Masterplan by 2030.\nSingapore Green Plan 2030: This website highlights Singapore’s national sustainability plan, which aims to strengthen the country’s commitments under the UN’s 2030 Sustainable Development Agenda and Paris Agreement. It also aims to position Singapore to achieve its long-term aspiration of attaining net-zero emissions by 2050.\n\nPaper Recycle Bins Interactive Map: This map offers information on the locations of SG Recycle bins designated for paper recycling.\n\nOur project will draw from existing geospatial analysis techniques and open datasets to inform our approach. We will focus on practical exercises to refine our proposal and ensure realistic analytical methods.\n\n\nBased on the myriad recycling maps and scattered information available online, there lacks a centralized hub presenting comprehensive recycling details, including various categories like regular recyclables, e-waste, paper, clothes, and more. In response to Singapore’s recycling initiative urging us to leverage geospatial analysis, we aim to streamline this data aggregation process, extracting valuable insights to formulate effective strategies towards achieving Singapore’s zero emissions goals."
  },
  {
    "objectID": "Proposal/Proposal.html#data",
    "href": "Proposal/Proposal.html#data",
    "title": "IS415-GAA Group 6: Project Proposal - Geospatial Analysis of Recycling Bin Distribution in Singapore",
    "section": "",
    "text": "The project will utilize the following data sets:\n\ndata.gov.sg: Location of Blue Bins in Singapore\nnea.gov.sg: Location of Reverse Vending Machines(RVM) [RecycleNSave] in Singapore\nALBA E-Waste Singapore: Location of E-Waste Bin in Singapore\nSingstat: Population Density of Singapore"
  },
  {
    "objectID": "Proposal/Proposal.html#approach",
    "href": "Proposal/Proposal.html#approach",
    "title": "IS415-GAA Group 6: Project Proposal - Geospatial Analysis of Recycling Bin Distribution in Singapore",
    "section": "",
    "text": "The Spatial Analysis Module will employ Kernel Density Estimation (KDE) to analyze the spatial distribution of recycling bins and population density across Singapore. KDE is a commonly used technique in spatial analysis to estimate the density of point events over a continuous surface. By applying KDE to the location data of recycling bins and population density, we will generate density surfaces that visualize the intensity of these features across the city-state.\nThis module will involve the following steps:\n\nData Preparation: Cleaning and preprocessing of the location data of recycling bins and population density to ensure consistency and accuracy.\nKDE Analysis: Applying KDE algorithms to the prepared data sets to generate density surfaces for recycling bins and population density.\nVisualization: Visualizing the KDE surfaces using interactive maps to allow users to explore the spatial distribution patterns.\n\n\n\n\nThe Hotspot Identification Module will utilize global and local measures of spatial autocorrelation to identify hotspots and cold spots of recycling bins and population density. Global measures, such as Moran’s I or Geary’s C, will provide an overall assessment of spatial clustering, while local measures, such as Local Indicators of Spatial Association (LISA), will identify specific hotspots and cold spots within the city-state.\nThis module will involve the following steps:\n\nCalculation of Global Measures: Computing global measures of spatial autocorrelation to assess the overall clustering patterns of recycling bins and population density.\nLocal Indicators Analysis: Conducting LISA analysis to identify statistically significant clusters of high and low values (hotspots and cold spots) of recycling bins and population density.\nInterpretation: Interpreting the results of the hotspot analysis in conjunction with demographic and environmental data to understand the underlying factors influencing the spatial distribution patterns."
  },
  {
    "objectID": "Proposal/Proposal.html#r-shiny-application",
    "href": "Proposal/Proposal.html#r-shiny-application",
    "title": "IS415-GAA Group 6: Project Proposal - Geospatial Analysis of Recycling Bin Distribution in Singapore",
    "section": "",
    "text": "The shiny application will integrate the outputs from the Spatial Analysis Module and Hotspot Identification Module to provide users with interactive visualizations and actionable insights. Users will be able to explore the KDE surfaces, identify hotspots and cold spots, and access recommendations for optimizing recycling bin distribution in Singapore. The application will feature intuitive user interfaces and interactive maps to facilitate data exploration and decision-making by stakeholders and policymakers."
  },
  {
    "objectID": "dataPreProcess.html",
    "href": "dataPreProcess.html",
    "title": "IS415-GAA Group 6: Data Pre-Processing - Geospatial Analysis of Recycling Bin Distribution in Singapore",
    "section": "",
    "text": "pacman::p_load(sf, sp, sfdep, tmap, tidyverse, plotly)\n\nBlue Bin\n\nbluebins &lt;- st_read(dsn = \"Data/gov\", \n                 layer = \"RECYCLINGBINS\")\n\nReading layer `RECYCLINGBINS' from data source `C:\\dljyuan\\IS415-GAA-JKW\\Data\\gov' using driver `ESRI Shapefile'\nSimple feature collection with 12578 features and 18 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 11519.15 ymin: 28097.64 xmax: 45292.59 ymax: 48741.06\nProjected CRS: SVY21\n\n\nMaster Plan Subzone\n\nmpsz &lt;- st_read(dsn = \"Data/prep\", \n                 layer = \"MPSZ-2019\")\n\nReading layer `MPSZ-2019' from data source `C:\\dljyuan\\IS415-GAA-JKW\\Data\\prep' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nE-Waste Bin\n\newbins &lt;- read_csv(\"Data/prep/EWbins.csv\")\n\nIncentive Bin\n\ninbins &lt;- read_csv(\"Data/prep/RVMbins.csv\")\n\nSG Population\n\npop &lt;- read_csv(\"Data/singstat/PopulationSG_2023.csv\")\n\nRows: 75696 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, FA\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\npopdata &lt;- pop %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup()%&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \n  select(`PA`, `SZ`, \n       `TOTAL`)\n\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n\n\n\npopdata &lt;- popdata %&gt;%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper))\n\n\npop &lt;- left_join(mpsz, popdata,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\n\n# Check for invalid geometries\ninvalid_geoms &lt;- !st_is_valid(pop)\n# Fix invalid geometries\npop[invalid_geoms, ] &lt;- st_make_valid(pop[invalid_geoms, ])\n\n\npop &lt;- st_transform(pop, 3414)\nbluebins &lt;- st_transform(bluebins, 3414)\newbins &lt;- st_transform(ewbins, 3414)\ninbins &lt;- st_transform(inbins, 3414)\n\n\n# Function to geocode using OpenStreetMap Nominatim API\ngeocode_osm &lt;- function(postal_codes) {\n  result &lt;- lapply(postal_codes, function(code) {\n    url &lt;- paste0(\"https://nominatim.openstreetmap.org/search?format=json&postalcode=\", code, \"&country=Singapore\")\n    data &lt;- jsonlite::fromJSON(url)\n    if (length(data) &gt; 0) {\n      return(data[1, c(\"lat\", \"lon\")])\n    } else {\n      return(NA)\n    }\n  })\n  result &lt;- do.call(rbind, result)\n  return(result)\n}\n\n# Extract postal codes from the CSV data\npostal_codes &lt;- ewbins$`Postal Code`\n\n# Geocode postal codes using OpenStreetMap Nominatim API\ngeo_data_osm &lt;- geocode_osm(postal_codes)\n\n# Bind latitude and longitude data back to the original data frame\newbins &lt;- cbind(ewbins, geo_data_osm)\n\n\n# Identify rows with missing lat or lon\nmissing_coords &lt;- ewbins[is.na(ewbins$lat) | is.na(ewbins$lon), c(\"Postal Code\", \"lat\", \"lon\")]\n\n# Print the rows with missing coordinates\nprint(missing_coords)\n\n\nrow_indices &lt;- c(19, 21, 23, 62, 64, 71, 123, 142, 146, 153, 164)\newbins$lat[row_indices] &lt;- c(1.353990, \n                             1.369590, \n                             1.285980, \n                             1.3732, \n                             1.3731, \n                             1.3106,\n                             1.3247, \n                             1.2832, \n                             1.3335, \n                             1.3625, \n                             1.3840)  \n\newbins$lon[row_indices] &lt;- c(103.944250, \n                             103.846900, \n                             103.827370, \n                             103.8458, \n                             103.9337, \n                             103.8363,\n                             103.7468, \n                             103.8058, \n                             103.7403, \n                             103.8347, \n                             103.7451)\n\n\n# Convert to spatial points in WGS 84 (EPSG:4326)\ncoordinates &lt;- st_as_sf(ewbins, coords = c(\"lon\", \"lat\"), crs = 4326)\n\n# Transform coordinates to SVY21 (EPSG:3414)\newbins &lt;- st_transform(coordinates, 3414)\n\n\n# Extract postal codes from the CSV data\npostal_codes &lt;- inbins$`Postal Code`\n\n# Geocode postal codes using OpenStreetMap Nominatim API\ngeo_data_osm &lt;- geocode_osm(postal_codes)\n\n# Bind latitude and longitude data back to the original data frame\ninbins &lt;- cbind(inbins, geo_data_osm)\n\n# Identify rows with missing lat or lon\nmissing_coords &lt;- inbins[is.na(inbins$lat) | is.na(inbins$lon), c(\"Postal Code\", \"lat\", \"lon\")]\n\n# Print the rows with missing coordinates\nprint(missing_coords)\n\n\nrow_indices &lt;- c(3, 8, 10, 12, 14, 24, 25, 26)\ninbins$lat[row_indices] &lt;- c(1.37045, \n                            1.32099,\n                            1.33306,\n                            1.35547,\n                            1.29948,\n                            1.34649,\n                            1.35878,\n                            1.39071)  \n\ninbins$lon[row_indices] &lt;- c(103.88808,\n                             103.88775,\n                             103.96604,\n                             103.85110,\n                             103.84547,\n                             103.72905,\n                             103.75281,\n                             103.74852)\n\n\n# Convert to spatial points in WGS 84 (EPSG:4326)\ncoordinates &lt;- st_as_sf(inbins, coords = c(\"lon\", \"lat\"), crs = 4326)\n\n# Transform coordinates to SVY21 (EPSG:3414)\ninbins &lt;- st_transform(coordinates, 3414)\n\n\nsubzone_matched &lt;- st_intersection(bluebins, pop)\nsubzone_matched &lt;- st_drop_geometry(subzone_matched)\njoined_data &lt;- left_join(pop, subzone_matched)\n\n\njoined_data_clean &lt;- na.omit(joined_data)\n\n\njoined_data_clean &lt;- joined_data[complete.cases(joined_data$ADDRESSSTR), ]\n\n\ngrouped_data &lt;- joined_data_clean %&gt;%\n  group_by(SUBZONE_N, REGION_N) %&gt;%\n  summarize(count = n())\n\ngrouped_data &lt;- st_drop_geometry(grouped_data)\ngrouped_data &lt;- left_join(pop, grouped_data)\n\ncolumns_to_keep &lt;- c(\"SUBZONE_N\", \"REGION_N\", \"count\")  \n\ngrouped_data &lt;- grouped_data[, columns_to_keep]\n\ngrouped_data &lt;- grouped_data %&gt;%\n  mutate(count = ifelse(is.na(count), 0, count))\n\n\ngrouped_data &lt;- grouped_data %&gt;% \n  mutate(TYPE = \"BLUEBIN\")\n\n\nbluebins_hs &lt;- read_rds(\"Data/prep/bluebins_dist.rds\")\newbins_hs &lt;- read_rds(\"Data/prep/ewbins_dist.rds\")\ninbins_hs &lt;- read_rds(\"Data/prep/inbins_dist.rds\")\n\n\nwm_q &lt;- bluebins_hs %&gt;%\n  mutate(nb = st_contiguity(geometry, queen = TRUE),\n         wt = st_weights(nb,\n                         style = \"W\",\n                         allow_zero = TRUE),\n         .before = 1) \nwm_q\n\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                         nb\n1         6, 36, 52, 70, 91\n2              3, 5, 72, 75\n3  2, 5, 37, 42, 43, 75, 86\n4                         0\n5  2, 3, 43, 71, 72, 73, 77\n6        1, 52, 81, 94, 293\n7                         0\n8                         0\n9                         0\n10                       14\n                                                                            wt\n1                                                      0.2, 0.2, 0.2, 0.2, 0.2\n2                                                       0.25, 0.25, 0.25, 0.25\n3  0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571\n4                                                                         NULL\n5  0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571\n6                                                      0.2, 0.2, 0.2, 0.2, 0.2\n7                                                                         NULL\n8                                                                         NULL\n9                                                                         NULL\n10                                                                           1\n                 SUBZONE_N       REGION_N count                       geometry\n1              MARINA EAST CENTRAL REGION     0 MULTIPOLYGON (((33222.98 29...\n2         INSTITUTION HILL CENTRAL REGION     0 MULTIPOLYGON (((28481.45 30...\n3           ROBERTSON QUAY CENTRAL REGION     0 MULTIPOLYGON (((28087.34 30...\n4  JURONG ISLAND AND BUKOM    WEST REGION     0 MULTIPOLYGON (((14557.7 304...\n5             FORT CANNING CENTRAL REGION     0 MULTIPOLYGON (((29542.53 31...\n6         MARINA EAST (MP) CENTRAL REGION     0 MULTIPOLYGON (((35279.55 30...\n7                   SUDONG    WEST REGION     0 MULTIPOLYGON (((15772.59 21...\n8                  SEMAKAU    WEST REGION     0 MULTIPOLYGON (((19843.41 21...\n9           SOUTHERN GROUP CENTRAL REGION     0 MULTIPOLYGON (((30865.58 22...\n10                 SENTOSA CENTRAL REGION     0 MULTIPOLYGON (((26885.45 26...\n      TYPE\n1  BLUEBIN\n2  BLUEBIN\n3  BLUEBIN\n4  BLUEBIN\n5  BLUEBIN\n6  BLUEBIN\n7  BLUEBIN\n8  BLUEBIN\n9  BLUEBIN\n10 BLUEBIN\n\n\n\nset.seed(1234)\nglobal_moran_perm(wm_q$count,\n                       wm_q$nb,\n                       wm_q$wt,\n                  zero.policy = TRUE,\n                  nsim = 999)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.2836, observed rank = 1000, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\nlisa &lt;- wm_q %&gt;% \n  mutate(local_moran = local_moran(\n    count, nb, wt, zero.policy = TRUE, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\n\nwm_idw &lt;- bluebins_hs %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\n! Polygon provided. Using point on surface.\n\n\n\nHCSA &lt;- wm_idw %&gt;% \n  mutate(local_Gi = local_gstar_perm(\n    count, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_Gi)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Data/prep/MPSZ-2019.html",
    "href": "Data/prep/MPSZ-2019.html",
    "title": "IS415-GAA-JinYuan&WanShen",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IS415-GAA JinYuan & WanShen",
    "section": "",
    "text": "Our project focuses on leveraging geospatial analytics to optimize recycling bin placement and management in Singapore urban areas. By analysing spatial data, we aim to identify optimal locations for recycling bins, improve waste management efficiency, and promote sustainability. Our project is a collaboration between Jin Yuan and Wan Shen, two students from the IS415 Geospatial Analytics course at Singapore Management University."
  },
  {
    "objectID": "index.html#about-us",
    "href": "index.html#about-us",
    "title": "IS415-GAA JinYuan & WanShen",
    "section": "",
    "text": "Our project focuses on leveraging geospatial analytics to optimize recycling bin placement and management in Singapore urban areas. By analysing spatial data, we aim to identify optimal locations for recycling bins, improve waste management efficiency, and promote sustainability. Our project is a collaboration between Jin Yuan and Wan Shen, two students from the IS415 Geospatial Analytics course at Singapore Management University."
  },
  {
    "objectID": "RecycleSGShiny/testdata/MPSZ-2019.html",
    "href": "RecycleSGShiny/testdata/MPSZ-2019.html",
    "title": "IS415-GAA-JinYuan&WanShen",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Work/Postal_to_LatLon.html",
    "href": "Work/Postal_to_LatLon.html",
    "title": "Get LatLon from Postal Code",
    "section": "",
    "text": "# Define Singaporean postal codes with \"SG\" suffix\nsingapore_postal_codes &lt;- c(\"038989\", \"238877\", \"188065\")\n\n# Function to geocode using OpenStreetMap Nominatim API\ngeocode_osm &lt;- function(postal_codes) {\n  result &lt;- lapply(postal_codes, function(code) {\n    url &lt;- paste0(\"https://nominatim.openstreetmap.org/search?format=json&postalcode=\", code)\n    data &lt;- jsonlite::fromJSON(url)\n    if (length(data) &gt; 0) {\n      return(data[1, c(\"lat\", \"lon\")])\n    } else {\n      return(NA)\n    }\n  })\n  result &lt;- do.call(rbind, result)\n  return(result)\n}\n\n# Geocode postal codes using OpenStreetMap Nominatim API\ngeo_data_osm &lt;- geocode_osm(singapore_postal_codes)\n\n# Print the geocoded data\nprint(geo_data_osm)\n\n                lat          lon\n1         1.2956625  103.8590111\n2 1.303783707142857 103.83313605\n3         1.2961679  103.8500436"
  }
]